/** {Spec} Flow domain setup for verifying give-up template implementations */

include "inset-flows.spl"

/* The node-level invariant (\gamma in the paper). */
predicate nodeinv(n: Node, I_n: Interface, C: Set<K>)
{
    (forall k: K :: k in C ==> in_inset(k, I_n, n))
  && (forall k: K, n1: Node :: k !in C || !(in_outset(k, I_n, n1)))
}

